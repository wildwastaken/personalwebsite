import {
  BlogProvider,
  __objRest,
  __spreadProps,
  __spreadValues,
  sortDate,
  useBlogContext
} from "./chunk-BUW6DVV6.js";

// src/index.tsx
import React24 from "react";
import { ThemeProvider } from "next-themes";

// src/article-layout.tsx
import React18 from "react";

// src/meta.tsx
import React14 from "react";
import Link from "next/link";

// src/theme-switch.tsx
import React13 from "react";
import { useTheme } from "next-themes";

// ../nextra/dist/chunk-HIDP27A7.mjs
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues2 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest2 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// ../nextra/dist/chunk-I473SOMZ.mjs
import React from "react";
import React2 from "react";
import React3 from "react";
import React4 from "react";
import React5 from "react";
import React6 from "react";
import React7 from "react";
import React8 from "react";
import React9 from "react";
import React10 from "react";
import React11 from "react";
import React12 from "react";
function CheckIcon(props) {
  return /* @__PURE__ */ React2.createElement("svg", __spreadValues2({
    viewBox: "0 0 20 20",
    width: "1em",
    height: "1em",
    fill: "currentColor"
  }, props), /* @__PURE__ */ React2.createElement("path", {
    fillRule: "evenodd",
    d: "M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z",
    clipRule: "evenodd"
  }));
}
function CopyIcon(props) {
  return /* @__PURE__ */ React3.createElement("svg", __spreadValues2({
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    stroke: "currentColor"
  }, props), /* @__PURE__ */ React3.createElement("rect", {
    x: "9",
    y: "9",
    width: "13",
    height: "13",
    rx: "2",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }), /* @__PURE__ */ React3.createElement("path", {
    d: "M5 15H4C2.89543 15 2 14.1046 2 13V4C2 2.89543 2.89543 2 4 2H13C14.1046 2 15 2.89543 15 4V5",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }));
}
function MoonIcon(props) {
  return /* @__PURE__ */ React8.createElement("svg", __spreadValues2({
    fill: "none",
    viewBox: "2 2 20 20",
    width: "12",
    height: "12",
    stroke: "currentColor"
  }, props), /* @__PURE__ */ React8.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    fill: "currentColor",
    d: "M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
  }));
}
function SunIcon(props) {
  return /* @__PURE__ */ React10.createElement("svg", __spreadValues2({
    fill: "none",
    viewBox: "3 3 18 18",
    width: "12",
    height: "12",
    stroke: "currentColor"
  }, props), /* @__PURE__ */ React10.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    fill: "currentColor",
    d: "M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
  }));
}
function WordWrapIcon(props) {
  return /* @__PURE__ */ React11.createElement("svg", __spreadValues2({
    viewBox: "0 0 24 24",
    width: "24",
    height: "24"
  }, props), /* @__PURE__ */ React11.createElement("path", {
    fill: "currentColor",
    d: "M4 19h6v-2H4v2zM20 5H4v2h16V5zm-3 6H4v2h13.25c1.1 0 2 .9 2 2s-.9 2-2 2H15v-2l-3 3l3 3v-2h2c2.21 0 4-1.79 4-4s-1.79-4-4-4z"
  }));
}

// ../nextra/dist/hooks/index.mjs
import { useEffect, useState } from "react";
function useMounted() {
  const [mounted, setMounted] = useState(false);
  useEffect(() => {
    setMounted(true);
  }, []);
  return mounted;
}

// src/theme-switch.tsx
function ThemeSwitch() {
  const { theme, setTheme, resolvedTheme } = useTheme();
  const mounted = useMounted();
  const isDark = theme === "dark" || resolvedTheme === "dark";
  const toggleTheme = () => {
    setTheme(isDark ? "light" : "dark");
  };
  return /* @__PURE__ */ React13.createElement("span", {
    role: "button",
    "aria-label": "Toggle Dark Mode",
    className: "cursor-pointer p-2 text-current",
    tabIndex: 0,
    onClick: toggleTheme,
    onKeyDown: (e) => {
      if (e.key === "Enter")
        toggleTheme();
    }
  }, mounted && isDark ? /* @__PURE__ */ React13.createElement(MoonIcon, null) : /* @__PURE__ */ React13.createElement(SunIcon, null));
}

// src/utils/get-tags.ts
function split(tags) {
  return (Array.isArray(tags) ? tags : tags.split(",")).map((s) => s.trim());
}
function getTags(page) {
  if (!page.frontMatter) {
    return [];
  }
  const tags = page.frontMatter.tag || "";
  return split(tags);
}

// src/utils/traverse.ts
function traverse(pageMap, matcher) {
  for (const pageMapItem of pageMap) {
    if (matcher(pageMapItem)) {
      return pageMapItem;
    }
  }
  for (const item of pageMap) {
    if (item.kind === "Folder") {
      const matched = traverse(item.children, matcher);
      if (matched) {
        return matched;
      }
    }
  }
  return null;
}

// src/utils/parent.ts
var getParent = ({ opts }) => {
  let back = null;
  const parentPages = [];
  const { route } = opts;
  traverse(opts.pageMap, (page) => {
    if ("route" in page && route !== page.route && (route + "/").startsWith(page.route === "/" ? "/" : page.route + "/")) {
      parentPages.push(page);
    }
  });
  const parentPage = parentPages.reverse().find((page) => "frontMatter" in page && page.frontMatter && page.frontMatter.type === "posts");
  if (parentPage) {
    back = parentPage.route;
  }
  return { parentPage, back };
};

// src/meta.tsx
function Meta() {
  var _a;
  const { opts, config } = useBlogContext();
  const { author, date, tag } = opts.frontMatter;
  const { back } = getParent({ opts, config });
  const tags = tag ? split(tag) : [];
  const tagsEl = tags.map((t) => /* @__PURE__ */ React14.createElement(Link, {
    key: t,
    href: "/tags/[tag]",
    as: `/tags/${t}`
  }, /* @__PURE__ */ React14.createElement("a", {
    className: "\n          select-none\n          rounded-md\n          px-1\n          transition-colors\n          text-sm\n          text-gray-400\n          hover:text-gray-500\n          dark:text-gray-300\n          dark:hover:text-gray-200\n          bg-gray-200\n          hover:bg-gray-300\n          dark:bg-gray-600\n          dark:hover:bg-gray-700\n        "
  }, t)));
  const readingTime = (_a = opts.readingTime) == null ? void 0 : _a.text;
  return /* @__PURE__ */ React14.createElement("div", {
    className: "mb-8 flex gap-3 " + (readingTime ? "items-start" : "items-center")
  }, /* @__PURE__ */ React14.createElement("div", {
    className: "grow text-gray-400"
  }, /* @__PURE__ */ React14.createElement("div", {
    className: "flex flex-wrap items-center gap-1 not-prose"
  }, author, author && date && ",", date && /* @__PURE__ */ React14.createElement("time", {
    dateTime: new Date(date).toISOString()
  }, new Date(date).toDateString()), (author || date) && tags.length > 0 && "  \u2022  ", readingTime || tagsEl), readingTime && /* @__PURE__ */ React14.createElement("div", {
    className: "flex flex-wrap items-center gap-1 mt-1 not-prose"
  }, tagsEl)), /* @__PURE__ */ React14.createElement("div", {
    className: "flex items-center gap-3"
  }, back && /* @__PURE__ */ React14.createElement(Link, {
    href: back,
    passHref: true
  }, /* @__PURE__ */ React14.createElement("a", null, "Back")), config.darkMode && /* @__PURE__ */ React14.createElement(ThemeSwitch, null)));
}

// src/mdx-theme.tsx
import React16, {
  createRef,
  createContext,
  useContext,
  useEffect as useEffect3,
  useState as useState3
} from "react";
import { MDXProvider } from "@mdx-js/react";
import Link2 from "next/link";
import { createPortal } from "react-dom";

// ../nextra/dist/components/index.mjs
import React15 from "react";
import React22, {
  useCallback,
  useEffect as useEffect2,
  useState as useState2
} from "react";
import React32 from "react";
import React42, { useCallback as useCallback2 } from "react";
import React52 from "react";
import React62 from "react";
import React72 from "react";
import React82 from "react";
var Button = (_a) => {
  var _b = _a, {
    children,
    className = ""
  } = _b, props = __objRest2(_b, [
    "children",
    "className"
  ]);
  return /* @__PURE__ */ React15.createElement("button", __spreadValues2({
    className: [
      "nextra-button transition-colors",
      "bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-2",
      "dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50",
      className
    ].join(" ")
  }, props), children);
};
var CopyToClipboard = (_a) => {
  var _b = _a, {
    value
  } = _b, props = __objRest2(_b, [
    "value"
  ]);
  const [isCopied, setCopied] = useState2(false);
  useEffect2(() => {
    if (!isCopied)
      return;
    const timerId = setTimeout(() => {
      setCopied(false);
    }, 2e3);
    return () => {
      clearTimeout(timerId);
    };
  }, [isCopied]);
  const handleClick = useCallback(() => __async(void 0, null, function* () {
    setCopied(true);
    if (!(navigator == null ? void 0 : navigator.clipboard)) {
      console.error("Access to clipboard rejected!");
    }
    try {
      yield navigator.clipboard.writeText(JSON.parse(value));
    } catch (e) {
      console.error("Failed to copy!");
    }
  }), [value]);
  const IconToUse = isCopied ? CheckIcon : CopyIcon;
  return /* @__PURE__ */ React22.createElement(Button, __spreadValues2({
    onClick: handleClick,
    title: "Copy code"
  }, props), /* @__PURE__ */ React22.createElement(IconToUse, {
    className: "pointer-events-none h-4 w-4"
  }));
};
var Code = (_a) => {
  var _b = _a, {
    children,
    className = ""
  } = _b, props = __objRest2(_b, [
    "children",
    "className"
  ]);
  const hasLineNumbers = "data-line-numbers" in props;
  return /* @__PURE__ */ React32.createElement("code", __spreadValues2({
    className: [
      "border-black/5 bg-black/5 break-words rounded-md border py-0.5 px-[.25em] text-[.9em]",
      "dark:border-white/10 dark:bg-white/10",
      hasLineNumbers ? "[counter-reset:line]" : "",
      className
    ].join(" "),
    dir: "ltr"
  }, props), children);
};
var Pre = (_a) => {
  var _b = _a, {
    children,
    className = "",
    value,
    filename
  } = _b, props = __objRest2(_b, [
    "children",
    "className",
    "value",
    "filename"
  ]);
  const toggleWordWrap = useCallback2(() => {
    const htmlDataset = document.documentElement.dataset;
    const hasWordWrap = "nextraWordWrap" in htmlDataset;
    if (hasWordWrap) {
      delete htmlDataset.nextraWordWrap;
    } else {
      htmlDataset.nextraWordWrap = "";
    }
  }, []);
  return /* @__PURE__ */ React42.createElement(React42.Fragment, null, filename && /* @__PURE__ */ React42.createElement("div", {
    className: "bg-primary-700/5 text-gray-700 absolute top-0 z-[1] w-full truncate rounded-t-xl py-2 px-4 text-xs dark:bg-primary-300/10 dark:text-gray-200"
  }, filename), /* @__PURE__ */ React42.createElement("pre", __spreadValues2({
    className: [
      "bg-primary-700/5 mt-6 mb-4 overflow-x-auto rounded-xl font-medium subpixel-antialiased dark:bg-primary-300/10",
      "contrast-more:border contrast-more:border-primary-900/20 contrast-more:contrast-150 contrast-more:dark:border-primary-100/40",
      filename ? "pt-12 pb-4" : "py-4",
      className
    ].join(" ")
  }, props), children), /* @__PURE__ */ React42.createElement("div", {
    className: [
      "opacity-0 transition-opacity [div:hover>&]:opacity-100",
      "flex gap-1 absolute m-2 right-0",
      filename ? "top-8" : "top-0"
    ].join(" ")
  }, /* @__PURE__ */ React42.createElement(Button, {
    tabIndex: -1,
    onClick: toggleWordWrap,
    className: "md:hidden",
    title: "Toggle word wrap"
  }, /* @__PURE__ */ React42.createElement(WordWrapIcon, {
    className: "pointer-events-none w-4 h-4"
  })), value && /* @__PURE__ */ React42.createElement(CopyToClipboard, {
    tabIndex: -1,
    value
  })));
};
var Td = (props) => /* @__PURE__ */ React52.createElement("td", __spreadValues2({
  className: "m-0 border border-gray-300 px-4 py-2 dark:border-gray-600"
}, props));
var Table = (_a) => {
  var _b = _a, {
    className = ""
  } = _b, props = __objRest2(_b, [
    "className"
  ]);
  return /* @__PURE__ */ React62.createElement("table", __spreadValues2({
    className: "block overflow-x-scroll " + className
  }, props));
};
var Th = (props) => /* @__PURE__ */ React72.createElement("th", __spreadValues2({
  className: "m-0 border border-gray-300 px-4 py-2 dark:border-gray-600 font-semibold"
}, props));
var Tr = (props) => /* @__PURE__ */ React82.createElement("tr", __spreadValues2({
  className: "m-0 border-t border-gray-300 p-0 dark:border-gray-600 even:bg-gray-100 even:dark:bg-gray-600/20"
}, props));

// src/mdx-theme.tsx
var HeadingContext = createContext(createRef());
var H1 = ({ children }) => {
  const ref = useContext(HeadingContext);
  const { opts } = useBlogContext();
  const [showHeading, setShowHeading] = useState3(false);
  useEffect3(() => {
    if (ref.current && opts.hasJsxInH1) {
      setShowHeading(true);
    }
  }, []);
  return /* @__PURE__ */ React16.createElement(React16.Fragment, null, showHeading && createPortal(children, ref.current));
};
var createHeaderLink = (Tag) => (_a) => {
  var _b = _a, { children, id } = _b, props = __objRest(_b, ["children", "id"]);
  return /* @__PURE__ */ React16.createElement(Tag, __spreadValues({
    className: `subheading-${Tag}`
  }, props), /* @__PURE__ */ React16.createElement("span", {
    className: "subheading-anchor -mt-8",
    id
  }), /* @__PURE__ */ React16.createElement("a", {
    href: `#${id}`
  }, children));
};
var A = (_a) => {
  var _b = _a, { children } = _b, props = __objRest(_b, ["children"]);
  const isExternal = props.href && props.href.startsWith("https://");
  if (isExternal) {
    return /* @__PURE__ */ React16.createElement("a", __spreadValues({
      target: "_blank",
      rel: "noreferrer"
    }, props), children);
  }
  return props.href ? /* @__PURE__ */ React16.createElement(Link2, {
    href: props.href
  }, /* @__PURE__ */ React16.createElement("a", __spreadValues({}, props), children)) : /* @__PURE__ */ React16.createElement(React16.Fragment, null);
};
var components = {
  h1: H1,
  h2: createHeaderLink("h2"),
  h3: createHeaderLink("h3"),
  h4: createHeaderLink("h4"),
  h5: createHeaderLink("h5"),
  h6: createHeaderLink("h6"),
  a: A,
  pre: (_a) => {
    var _b = _a, { children } = _b, props = __objRest(_b, ["children"]);
    return /* @__PURE__ */ React16.createElement("div", {
      className: "not-prose"
    }, /* @__PURE__ */ React16.createElement(Pre, __spreadValues({}, props), children));
  },
  tr: Tr,
  th: Th,
  td: Td,
  table: (props) => /* @__PURE__ */ React16.createElement(Table, __spreadValues({
    className: "not-prose"
  }, props)),
  code: Code
};
var MDXTheme = ({
  children
}) => {
  return /* @__PURE__ */ React16.createElement(MDXProvider, {
    components
  }, children);
};

// src/basic-layout.tsx
import Head from "next/head";
import React17, { useRef } from "react";
var BasicLayout = ({ children }) => {
  var _a;
  const { config, opts } = useBlogContext();
  const title = `${opts.title}${config.titleSuffix || ""}`;
  const ref = useRef(null);
  return /* @__PURE__ */ React17.createElement("article", {
    className: "container prose prose-sm dark:prose-dark md:prose"
  }, /* @__PURE__ */ React17.createElement(Head, null, /* @__PURE__ */ React17.createElement("title", null, title), (_a = config.head) == null ? void 0 : _a.call(config, { title, meta: opts.frontMatter })), /* @__PURE__ */ React17.createElement(HeadingContext.Provider, {
    value: ref
  }, opts.hasJsxInH1 ? /* @__PURE__ */ React17.createElement("h1", {
    ref
  }) : null, !opts.hasJsxInH1 ? /* @__PURE__ */ React17.createElement("h1", null, opts.title) : null, children, config.footer));
};

// src/article-layout.tsx
var ArticleLayout = ({ children }) => {
  const { config } = useBlogContext();
  return /* @__PURE__ */ React18.createElement(BasicLayout, null, /* @__PURE__ */ React18.createElement(Meta, null), /* @__PURE__ */ React18.createElement(MDXTheme, null, children, config.postFooter, config.comments));
};

// src/posts-layout.tsx
import Link4 from "next/link";
import { useRouter } from "next/router";
import React20 from "react";

// src/nav.tsx
import React19 from "react";
import Link3 from "next/link";

// src/utils/collect.ts
var isNav = (page) => {
  var _a;
  const type = "frontMatter" in page && ((_a = page.frontMatter) == null ? void 0 : _a.type);
  return type && ["page", "posts"].includes(type);
};
var isPost = (page) => {
  var _a;
  if (page.kind === "Folder" || page.kind === "Meta" || page.name.startsWith("_"))
    return false;
  const type = (_a = page.frontMatter) == null ? void 0 : _a.type;
  return !type || type === "post";
};
var collectPostsAndNavs = ({ opts }) => {
  const posts = [];
  const navPages = [];
  const { route } = opts;
  traverse(opts.pageMap, (page) => {
    if (isNav(page)) {
      navPages.push(__spreadProps(__spreadValues({}, page), { active: page.route === route }));
    }
    if (isPost(page)) {
      posts.push(page);
    }
  });
  posts.sort(sortDate);
  navPages.sort(sortDate);
  return { posts, navPages };
};

// src/nav.tsx
function Nav() {
  var _a;
  const { opts, config } = useBlogContext();
  const { navPages } = collectPostsAndNavs({ opts, config });
  return /* @__PURE__ */ React19.createElement("div", {
    className: "mb-8 flex items-center gap-3"
  }, /* @__PURE__ */ React19.createElement("div", {
    className: "flex grow flex-wrap items-center justify-end gap-3"
  }, navPages.map((page) => {
    var _a2, _b;
    if (page.active) {
      return /* @__PURE__ */ React19.createElement("span", {
        key: page.route,
        className: "cursor-default text-gray-400"
      }, ((_a2 = page.frontMatter) == null ? void 0 : _a2.title) || page.name);
    }
    return /* @__PURE__ */ React19.createElement(Link3, {
      key: page.route,
      href: page.route,
      passHref: true
    }, /* @__PURE__ */ React19.createElement("a", null, ((_b = page.frontMatter) == null ? void 0 : _b.title) || page.name));
  }), (_a = config.navs) == null ? void 0 : _a.map((nav) => /* @__PURE__ */ React19.createElement(Link3, {
    key: nav.url,
    href: nav.url,
    passHref: true
  }, /* @__PURE__ */ React19.createElement("a", null, nav.name)))), config.darkMode && /* @__PURE__ */ React19.createElement(ThemeSwitch, null));
}

// src/posts-layout.tsx
var PostsLayout = ({ children }) => {
  const { config, opts } = useBlogContext();
  const { posts } = collectPostsAndNavs({ config, opts });
  const router = useRouter();
  const { type } = opts.frontMatter;
  const tagName = type === "tag" ? router.query.tag : null;
  const postList = posts.map((post) => {
    var _a, _b, _c;
    if (tagName) {
      const tags = getTags(post);
      if (!Array.isArray(tagName) && !tags.includes(tagName)) {
        return null;
      }
    } else if (type === "tag") {
      return null;
    }
    const postTitle = ((_a = post.frontMatter) == null ? void 0 : _a.title) || post.name;
    const date = ((_b = post.frontMatter) == null ? void 0 : _b.date) && new Date(post.frontMatter.date);
    const description = (_c = post.frontMatter) == null ? void 0 : _c.description;
    return /* @__PURE__ */ React20.createElement("div", {
      key: post.route,
      className: "post-item"
    }, /* @__PURE__ */ React20.createElement("h3", null, /* @__PURE__ */ React20.createElement(Link4, {
      href: post.route,
      passHref: true
    }, /* @__PURE__ */ React20.createElement("a", {
      className: "!no-underline"
    }, postTitle))), description && /* @__PURE__ */ React20.createElement("p", {
      className: "mb-2 text-gray-400"
    }, description, config.readMore && /* @__PURE__ */ React20.createElement(Link4, {
      href: post.route,
      passHref: true
    }, /* @__PURE__ */ React20.createElement("a", {
      className: "post-item-more ml-2"
    }, config.readMore))), date && /* @__PURE__ */ React20.createElement("time", {
      className: "text-sm text-gray-300",
      dateTime: date.toISOString()
    }, date.toDateString()));
  });
  return /* @__PURE__ */ React20.createElement(BasicLayout, null, /* @__PURE__ */ React20.createElement(Nav, null), /* @__PURE__ */ React20.createElement(MDXTheme, null, children), postList);
};

// src/page-layout.tsx
import React21 from "react";
var PageLayout = ({ children }) => {
  return /* @__PURE__ */ React21.createElement(BasicLayout, null, /* @__PURE__ */ React21.createElement(Nav, null), /* @__PURE__ */ React21.createElement(MDXTheme, null, children));
};

// src/constants.tsx
import React23 from "react";
var DEFAULT_THEME = {
  footer: /* @__PURE__ */ React23.createElement("small", {
    className: "block mt-32"
  }, "CC BY-NC 4.0 ", new Date().getFullYear(), " \xA9 Shu Ding."),
  readMore: "Read More \u2192"
};

// src/index.tsx
import { useRouter as useRouter2 } from "next/router";
import { useTheme as useTheme2 } from "next-themes";
var layoutMap = {
  post: ArticleLayout,
  page: PageLayout,
  posts: PostsLayout,
  tag: PostsLayout
};
var BlogLayout = ({
  config,
  children,
  opts
}) => {
  const type = opts.frontMatter.type || "post";
  const Layout2 = layoutMap[type];
  if (!Layout2) {
    throw new Error(`Nextra-themes-blog does not support the layout type "${type}" It only supports "post", "page", "posts" and "tag"`);
  }
  return /* @__PURE__ */ React24.createElement(BlogProvider, {
    opts,
    config
  }, /* @__PURE__ */ React24.createElement(Layout2, null, children));
};
function Layout(props) {
  const { route } = useRouter2();
  const context = globalThis.__nextra_pageContext__[route];
  if (!context)
    throw new Error(`No content found for ${route}.`);
  const extendedConfig = __spreadValues(__spreadValues({}, DEFAULT_THEME), context.themeConfig);
  return /* @__PURE__ */ React24.createElement(ThemeProvider, {
    attribute: "class",
    defaultTheme: "system",
    enableSystem: true
  }, /* @__PURE__ */ React24.createElement(BlogLayout, {
    config: extendedConfig,
    opts: context.pageOpts
  }, /* @__PURE__ */ React24.createElement(context.Content, __spreadValues({}, props))));
}
export {
  Layout as default,
  useBlogContext,
  useTheme2 as useTheme
};
